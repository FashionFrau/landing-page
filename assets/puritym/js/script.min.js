! function(a) { a.extend(a.easing, { easeInOutCubic: function(a, b, c, d, e) {
                return 1 > (b /= e / 2) ? d / 2 * b * b * b + c : d / 2 * ((b -= 2) * b * b + 2) + c } }), a.fn.outerFind = function(a) {
            return this.find(a).addBack(a) },
        function(a, b) {
            var c = function(a, b, c) {
                var d;
                return function() {
                    var e = this,
                        f = arguments;
                    d ? clearTimeout(d) : c && a.apply(e, f), d = setTimeout(function() { c || a.apply(e, f), d = null }, b || 100) } };
            jQuery.fn[b] = function(a) {
                return a ? this.bind("resize", c(a)) : this.trigger(b) } }(jQuery, "smartresize"), a.isMobile = function(b) {
            var c = [],
                d = { blackberry: "BlackBerry", android: "Android", windows: "IEMobile", opera: "Opera Mini", ios: "iPhone|iPad|iPod" };
            return b = "undefined" == a.type(b) ? "*" : b.toLowerCase(), "*" == b ? c = a.map(d, function(a) {
                return a }) : b in d && c.push(d[b]), !(!c.length || !navigator.userAgent.match(new RegExp(c.join("|"), "i"))) };
    var p = function() {
        var b = a('<div style="height: 50vh; position: absolute; top: -1000px; left: -1000px;">').appendTo("body"),
            c = b[0],
            d = parseInt(window.innerHeight / 2, 10),
            c = parseInt((window.getComputedStyle ? getComputedStyle(c, null) : c.currentStyle).height, 10);
        return b.remove(), c == d }();
    a(function() {
        function d() { a(this).css("height", 9 * a(this).parent().width() / 16) }
        a("html").addClass(a.isMobile() ? "mobile" : "desktop"), a(window).scroll(function() { a(".mbr-navbar--sticky").each(function() {
                var b = 10 < a(window).scrollTop() ? "addClass" : "removeClass";
                a(this)[b]("mbr-navbar--stuck").not(".mbr-navbar--open")[b]("mbr-navbar--short") }) }), a(document).on("add.cards change.cards", function(b) { a(b.target).outerFind(".mbr-hamburger:not(.mbr-added)").each(function() { a(this).addClass("mbr-added").click(function() { a(this).toggleClass("mbr-hamburger--open").parents(".mbr-navbar").toggleClass("mbr-navbar--open").removeClass("mbr-navbar--short") }).parents(".mbr-navbar").find("a:not(.mbr-hamburger)").click(function() { a(".mbr-hamburger--open").click() }) }) }), a(window).smartresize(function() { 991 < a(window).width() && a(".mbr-navbar--auto-collapse .mbr-hamburger--open").click() }).keydown(function(b) { 27 == b.which && a(".mbr-hamburger--open").click() }), a.isMobile() && navigator.userAgent.match(/Chrome/i) ? function(b, c) {
            var d = [b, b];
            d[c > b ? 0 : 1] = c, a(window).smartresize(function() {
                var b = a(window).height();
                0 > a.inArray(b, d) && (b = d[a(window).width() > b ? 1 : 0]), a(".mbr-section--full-height").css("height", b + "px") }) }(a(window).width(), a(window).height()) : p || (a(window).smartresize(function() { a(".mbr-section--full-height").css("height", a(window).height() + "px") }), a(document).on("add.cards", function(b) { a("html").hasClass("mbr-site-loaded") && a(b.target).outerFind(".mbr-section--full-height").length && a(window).resize() })), a(window).smartresize(function() { a(".mbr-section--16by9").each(d) }), a(document).on("add.cards change.cards", function(b) {
            var c = a(b.target).outerFind(".mbr-section--16by9");
            c.length ? c.attr("data-16by9", "true").each(d) : a(b.target).outerFind("[data-16by9]").css("height", "").removeAttr("data-16by9") }), a.fn.jarallax && !a.isMobile() && (a(document).on("destroy.parallax", function(b) { a(b.target).outerFind(".mbr-parallax-background").jarallax("destroy").css("position", "") }), a(document).on("add.cards change.cards", function(b) { a(b.target).outerFind(".mbr-parallax-background").jarallax({ speed: .8 }).css("position", "relative") })), a.fn.socialLikes && a(document).on("add.cards", function(b) { a(b.target).outerFind(".mbr-social-likes:not(.mbr-added)").on("counter.social-likes", function(b, c, d) { 999 < d && a(".social-likes__counter", b.target).html(Math.floor(d / 1e3) + "k") }).socialLikes({ initHtml: !1 }) });
        var c, e, l = 0,
            f = null,
            m = !a.isMobile();
        a(window).scroll(function() { e && clearTimeout(e);
            var b = a(window).scrollTop(),
                c = b <= l || m;
            if (l = b, f) {
                var d = b > f.breakPoint;
                c ? d != f.fixed && (m ? (f.fixed = d, a(f.elm).toggleClass("is-fixed")) : e = setTimeout(function() { f.fixed = d, a(f.elm).toggleClass("is-fixed") }, 40)) : (f.fixed = !1, a(f.elm).removeClass("is-fixed")) } }), a(document).on("add.cards delete.cards", function(b) { c && clearTimeout(c), c = setTimeout(function() { f && (f.fixed = !1, a(f.elm).removeClass("is-fixed")), a(".mbr-fixed-top:first").each(function() { f = { breakPoint: a(this).offset().top + 3 * a(this).height(), fixed: !1, elm: this }, a(window).scroll() }) }, 650) });
        var n = function() {
            var b = a(this),
                c = [],
                k = function(a) {
                    return new google.maps.LatLng(a[0], a[1]) },
                d = a.extend({ zoom: 14, type: "ROADMAP", center: null, markerIcon: null, showInfo: !0 }, eval("(" + (b.data("google-map-params") || "{}") + ")"));
            if (b.find(".mbr-google-map__marker").each(function() {
                    var b = a(this).data("coordinates");
                    b && c.push({ coord: b.split(/\s*,\s*/), icon: a(this).data("icon") || d.markerIcon, content: a(this).html(), template: a(this).html("{{content}}").removeAttr("data-coordinates data-icon")[0].outerHTML }) }).end().html("").addClass("mbr-google-map--loaded"), c.length) {
                var h = this.Map = new google.maps.Map(this, { scrollwheel: !1, draggable: !a.isMobile(), zoom: d.zoom, mapTypeId: google.maps.MapTypeId[d.type], center: k(d.center || c[0].coord) });
                a(window).smartresize(function() {
                    var a = h.getCenter();
                    google.maps.event.trigger(h, "resize"), h.setCenter(a) }), h.Geocoder = new google.maps.Geocoder, h.Markers = [], a.each(c, function(a, b) {
                    var c = new google.maps.Marker({ map: h, position: k(b.coord), icon: b.icon, animation: google.maps.Animation.DROP }),
                        e = c.InfoWindow = new google.maps.InfoWindow;
                    e._setContent = e.setContent, e.setContent = function(a) {
                        return this._setContent(a ? b.template.replace("{{content}}", a) : "") }, e.setContent(b.content), google.maps.event.addListener(c, "click", function() { e.anchor && e.anchor.visible ? e.close() : e.getContent() && e.open(h, c) }), b.content && d.showInfo && google.maps.event.addListenerOnce(c, "animation_changed", function() { setTimeout(function() { e.open(h, c) }, 350) }), h.Markers.push(c) }) } };
        a(document).on("add.cards", function(b) { window.google && google.maps && a(b.target).outerFind(".mbr-google-map").each(function() { n.call(this) }) }), a(window).smartresize(function() { a(".mbr-embedded-video").each(function() { a(this).height(a(this).width() * parseInt(a(this).attr("height") || 315) / parseInt(a(this).attr("width") || 560)) }) }), a(document).on("add.cards", function(b) { a("html").hasClass("mbr-site-loaded") && a(b.target).outerFind("iframe").length && a(window).resize() }), a(document).on("add.cards", function(b) { a(b.target).outerFind("[data-bg-video]").each(function() {
                for (var b, c = a(this).data("bg-video"), d = [/\?v=([^&]+)/, /(?:embed|\.be)\/([-a-z0-9_]+)/i, /^([-a-z0-9_]+)$/i], h = 0; h < d.length; h++)
                    if (b = d[h].exec(c)) {
                        var c = "http" + ("https:" == location.protocol ? "s" : "") + ":",
                            c = c + ("//img.youtube.com/vi/" + b[1] + "/maxresdefault.jpg"),
                            e = a('<div class="mbr-background-video-preview">').hide().css({ backgroundSize: "cover", backgroundPosition: "center" });
                        a(".container:eq(0)", this).before(e), a("<img>").on("load", function() {
                            if (120 == (this.naturalWidth || this.width)) {
                                var a = this.src.split("/").pop();
                                switch (a) {
                                    case "maxresdefault.jpg":
                                        this.src = this.src.replace(a, "sddefault.jpg");
                                        break;
                                    case "sddefault.jpg":
                                        this.src = this.src.replace(a, "hqdefault.jpg") } } else e.css("background-image", 'url("' + this.src + '")').show() }).attr("src", c), a.fn.YTPlayer && !a.isMobile() && (c = eval("(" + (a(this).data("bg-video-params") || "{}") + ")"), a(".container:eq(0)", this).before('<div class="mbr-background-video"></div>').prev().YTPlayer(a.extend({ videoURL: b[1], containment: "self", showControls: !1, mute: !0 }, c)));
                        break } }) }), a("body > *:not(style, script)").trigger("add.cards"), a("html").addClass("mbr-site-loaded"), a(window).resize().scroll(), a("html").hasClass("is-builder") || a(document).click(function(b) {
            try {
                var c = b.target;
                do
                    if (c.hash) {
                        var d = /#bottom|#top/g.test(c.hash);
                        a(d ? "body" : c.hash).each(function() { b.preventDefault();
                            var d = a(".mbr-navbar--sticky").length ? 64 : 0,
                                d = "#bottom" == c.hash ? a(this).height() - a(window).height() : a(this).offset().top - d;
                            a("html, body").stop().animate({ scrollTop: d }, 800, "easeInOutCubic") });
                        break }
                while (c = c.parentNode) } catch (a) {} }), a(".cols-same-height .mbr-figure").each(function() {
            function b() {
                if (d.css({ width: "", maxWidth: "", marginLeft: "" }), g && f) {
                    var a = g / f;
                    c.addClass({ position: "absolute", top: 0, left: 0, right: 0, bottom: 0 });
                    var b = e.height() / e.width();
                    b > a && (a = 100 * (b - a) / a, d.css({ width: a + 100 + "%", maxWidth: a + 100 + "%", marginLeft: -a / 2 + "%" })) } }
            var c = a(this),
                d = c.children("img"),
                e = c.parent(),
                f = d[0].width,
                g = d[0].height;
            d.one("load", function() { f = d[0].width, g = d[0].height, b() }), a(window).on("resize", b), b() }) }) }(jQuery), ! function() {
    try { document.getElementsByClassName("engine")[0].getElementsByTagName("a")[0].removeAttribute("rel") } catch (a) {}
    if (!document.getElementById("top-1")) {
        var a = document.createElement("section");
        a.id = "top-1", a.className = "engine", a.innerHTML = "", document.body.insertBefore(a, document.body.childNodes[0]) } }();
